(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{458:function(a,e,t){"use strict";t.r(e);var n=t(2),s=Object(n.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h4",{attrs:{id:"缓存使用步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存使用步骤"}},[a._v("#")]),a._v(" 缓存使用步骤")]),a._v(" "),e("h4",{attrs:{id:"_1、springboot-的主启动类-enablecaching"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、springboot-的主启动类-enablecaching"}},[a._v("#")]),a._v(" 1、SpringBoot 的主启动类 :@EnableCaching")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("@EnableCaching\n@SpringBootApplication\npublic class SuperAdminApplication {\n    public static void main(String[] args) {\n        SpringApplication springApplication = new SpringApplication(SuperAdminApplication.class);\n        springApplication.run(args);\n    }\n}\n")])])]),e("h4",{attrs:{id:"_2、方法上使用缓存注解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、方法上使用缓存注解"}},[a._v("#")]),a._v(" 2、方法上使用缓存注解")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('@Cacheable(value = "myCache", unless = "#result == null", cacheManager = "myCacheManager")\n')])])]),e("p",[a._v("（这里使用 "),e("code",[a._v("@Cacheable")]),a._v(" 注解就可以将运行结果缓存，以后查询相同的数据，直接从缓存中取，不需要调用方法。）")]),a._v(" "),e("h4",{attrs:{id:"_3、-cacheable-常用属性说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、-cacheable-常用属性说明"}},[a._v("#")]),a._v(" 3、@Cacheable 常用属性说明")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("cacheNames/value")]),a._v(" ：用来指定缓存组件的名字")]),a._v(" "),e("li",[e("code",[a._v("key")]),a._v(" ：缓存数据时使用的 key，可以用它来指定。默认是使用方法参数的值。（这个 key 你可以使用 spEL 表达式来编写）")]),a._v(" "),e("li",[e("code",[a._v("keyGenerator")]),a._v(" ：key 的生成器。 key 和 keyGenerator 二选一使用")]),a._v(" "),e("li",[e("code",[a._v("cacheManager")]),a._v(" ：可以用来指定缓存管理器。从哪个缓存管理器里面获取缓存。")]),a._v(" "),e("li",[e("code",[a._v("condition")]),a._v(" ：可以用来指定符合条件的情况下才缓存")]),a._v(" "),e("li",[e("code",[a._v("unless")]),a._v(" ：否定缓存。当 unless 指定的条件为 true ，方法的返回值就不会被缓存。当然你也可以获取到结果进行判断。（通过 "),e("code",[a._v("#result")]),a._v(" 获取方法结果）")]),a._v(" "),e("li",[e("code",[a._v("sync")]),a._v(" ：是否使用异步模式。")])])])}),[],!1,null,null,null);e.default=s.exports}}]);